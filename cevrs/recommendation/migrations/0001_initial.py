# -*- coding: utf-8 -*-
# Generated by Django 1.11.2 on 2019-12-18 02:16
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CityRank',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank', models.IntegerField(blank=True, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('clazz', models.CharField(blank=True, max_length=20, null=True)),
                ('grade', models.FloatField(blank=True, null=True)),
                ('top100', models.IntegerField(blank=True, null=True)),
                ('firstclass', models.IntegerField(blank=True, null=True)),
                ('best', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'city_rank',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ControlLine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(blank=True, null=True)),
                ('kind', models.CharField(blank=True, max_length=10, null=True)),
                ('clazz', models.CharField(blank=True, max_length=10, null=True)),
                ('ctrl_line', models.IntegerField(blank=True, null=True)),
                ('ctrl_rank', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'control_line',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Employment',
            fields=[
                ('school', models.CharField(blank=True, max_length=50, null=True)),
                ('kind', models.CharField(blank=True, max_length=50, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('recruit', models.CharField(blank=True, max_length=50, null=True)),
                ('clazz', models.CharField(blank=True, max_length=50, null=True)),
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('grade', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'employment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Funds',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank', models.IntegerField(blank=True, null=True)),
                ('school', models.CharField(blank=True, max_length=50, null=True)),
                ('fund', models.FloatField(blank=True, null=True)),
                ('all_rank', models.IntegerField(blank=True, null=True)),
                ('stars', models.CharField(blank=True, max_length=10, null=True)),
                ('clazz', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'funds',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GradeAll',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kind', models.CharField(blank=True, max_length=10, null=True)),
                ('number', models.IntegerField(blank=True, null=True)),
                ('school', models.CharField(blank=True, max_length=50, null=True)),
                ('figure', models.IntegerField(blank=True, null=True)),
                ('grade', models.IntegerField(blank=True, null=True)),
                ('chinese', models.FloatField(blank=True, null=True)),
                ('math', models.FloatField(blank=True, null=True)),
                ('english', models.FloatField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('rank', models.IntegerField(blank=True, null=True)),
                ('clazz', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'db_table': 'grade_all',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GradeLine',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('school', models.CharField(blank=True, max_length=20, null=True)),
                ('rank', models.IntegerField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('clazz', models.CharField(blank=True, max_length=8, null=True)),
                ('kind', models.CharField(blank=True, max_length=10, null=True)),
                ('grade', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'grade_line',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RankLine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field_school', models.TextField(blank=True, db_column='\ufeffschool', null=True)),
                ('kind', models.TextField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('grade', models.BigIntegerField(blank=True, null=True)),
                ('rank', models.IntegerField(blank=True, null=True)),
                ('clazz', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'rank_line',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.CharField(blank=True, max_length=50, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('province', models.CharField(blank=True, max_length=50, null=True)),
                ('area', models.CharField(blank=True, max_length=50, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('if211', models.CharField(blank=True, max_length=50, null=True)),
                ('if985', models.CharField(blank=True, max_length=50, null=True)),
                ('funder', models.CharField(blank=True, max_length=50, null=True)),
                ('kind', models.CharField(blank=True, max_length=50, null=True)),
                ('manager', models.CharField(blank=True, max_length=50, null=True)),
                ('managekind', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'school',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Schoolgrade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('school', models.CharField(blank=True, max_length=255, null=True)),
                ('citygrade', models.FloatField(blank=True, db_column='cityGrade', null=True)),
                ('strength', models.FloatField(blank=True, null=True)),
                ('employment', models.FloatField(blank=True, null=True)),
                ('fund', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'schoolgrade',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Strength',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank', models.IntegerField(blank=True, null=True)),
                ('school', models.CharField(blank=True, max_length=50, null=True)),
                ('grade', models.FloatField(blank=True, null=True)),
                ('star', models.CharField(blank=True, max_length=10, null=True)),
                ('clazz', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'strength',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StudentNumber',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('stu_num', models.IntegerField()),
                ('li_num', models.IntegerField()),
                ('wen_num', models.IntegerField()),
            ],
            options={
                'db_table': 'student_number',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=50)),
                ('password_hash', models.CharField(max_length=128)),
                ('email', models.CharField(blank=True, max_length=60, null=True)),
            ],
            options={
                'db_table': 'user',
                'managed': False,
            },
        ),
    ]
